"use strict";(self.webpackChunkgb_studio_docs=self.webpackChunkgb_studio_docs||[]).push([[1280],{3905:(e,t,a)=>{a.d(t,{Zo:()=>_,kt:()=>s});var l=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=l.createContext({}),p=function(e){var t=l.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},_=function(e){var t=p(e.components);return l.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},k=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,_=m(e,["components","mdxType","originalType","parentName"]),k=p(a),s=n,N=k["".concat(o,".").concat(s)]||k[s]||u[s]||r;return a?l.createElement(N,i(i({ref:t},_),{},{components:a})):l.createElement(N,i({ref:t},_))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=k;var m={};for(var o in t)hasOwnProperty.call(t,o)&&(m[o]=t[o]);m.originalType=e,m.mdxType="string"==typeof e?e:n,i[1]=m;for(var p=2;p<r;p++)i[p]=a[p];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}k.displayName="MDXCreateElement"},3213:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>m,toc:()=>p});var l=a(7462),n=(a(7294),a(3905));const r={},i="GBVM Operations",m={unversionedId:"scripting/gbvm/gbvm-operations",id:"scripting/gbvm/gbvm-operations",title:"GBVM Operations",description:"Core",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/scripting/gbvm/gbvm-operations.md",sourceDirName:"scripting/gbvm",slug:"/scripting/gbvm/gbvm-operations",permalink:"/gb-studio-docs/fr/docs/scripting/gbvm/gbvm-operations",draft:!1,editUrl:"https://github.com/chrismaltby/gb-studio-docs/tree/main/docs/scripting/gbvm/gbvm-operations.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GBVM",permalink:"/gb-studio-docs/fr/docs/scripting/gbvm/"},next:{title:"Building Your Game",permalink:"/gb-studio-docs/fr/docs/build"}},o={},p=[{value:"Core",id:"core",level:2},{value:"VM_STOP",id:"vm_stop",level:3},{value:"VM_PUSH_CONST",id:"vm_push_const",level:3},{value:"VM_POP",id:"vm_pop",level:3},{value:"VM_CALL",id:"vm_call",level:3},{value:"VM_RET",id:"vm_ret",level:3},{value:"VM_RET_N",id:"vm_ret_n",level:3},{value:"VM_GET_FAR",id:"vm_get_far",level:3},{value:"VM_LOOP",id:"vm_loop",level:3},{value:".CASE",id:"case",level:3},{value:"VM_SWITCH",id:"vm_switch",level:3},{value:"VM_JUMP",id:"vm_jump",level:3},{value:"VM_CALL_FAR",id:"vm_call_far",level:3},{value:"VM_RET_FAR",id:"vm_ret_far",level:3},{value:"VM_RET_FAR_N",id:"vm_ret_far_n",level:3},{value:"VM_INVOKE",id:"vm_invoke",level:3},{value:"VM_BEGINTHREAD",id:"vm_beginthread",level:3},{value:"VM_IF",id:"vm_if",level:3},{value:"VM_PUSH_VALUE_IND",id:"vm_push_value_ind",level:3},{value:"VM_PUSH_VALUE",id:"vm_push_value",level:3},{value:"VM_RESERVE",id:"vm_reserve",level:3},{value:"VM_SET",id:"vm_set",level:3},{value:"VM_SET_CONST",id:"vm_set_const",level:3},{value:"VM_RPN",id:"vm_rpn",level:3},{value:".R_INT8",id:"r_int8",level:3},{value:".R_INT16",id:"r_int16",level:3},{value:".R_REF",id:"r_ref",level:3},{value:".R_REF_IND",id:"r_ref_ind",level:3},{value:".R_REF_SET",id:"r_ref_set",level:3},{value:".R_OPERATOR",id:"r_operator",level:3},{value:".R_STOP",id:"r_stop",level:3},{value:"VM_JOIN",id:"vm_join",level:3},{value:"VM_TERMINATE",id:"vm_terminate",level:3},{value:"VM_IDLE",id:"vm_idle",level:3},{value:"VM_GET_TLOCAL",id:"vm_get_tlocal",level:3},{value:"VM_IF_CONST",id:"vm_if_const",level:3},{value:"VM_GET_UINT8",id:"vm_get_uint8",level:3},{value:"VM_GET_INT8",id:"vm_get_int8",level:3},{value:"VM_GET_INT16",id:"vm_get_int16",level:3},{value:"VM_SET_UINT8",id:"vm_set_uint8",level:3},{value:"VM_SET_INT8",id:"vm_set_int8",level:3},{value:"VM_SET_INT16",id:"vm_set_int16",level:3},{value:"VM_SET_CONST_INT8",id:"vm_set_const_int8",level:3},{value:"VM_SET_CONST_UINT8",id:"vm_set_const_uint8",level:3},{value:"VM_SET_CONST_INT16",id:"vm_set_const_int16",level:3},{value:"VM_INIT_RNG",id:"vm_init_rng",level:3},{value:"VM_RANDOMIZE",id:"vm_randomize",level:3},{value:"VM_RAND",id:"vm_rand",level:3},{value:"VM_LOCK",id:"vm_lock",level:3},{value:"VM_UNLOCK",id:"vm_unlock",level:3},{value:"VM_RAISE",id:"vm_raise",level:3},{value:"VM_SET_INDIRECT",id:"vm_set_indirect",level:3},{value:"VM_GET_INDIRECT",id:"vm_get_indirect",level:3},{value:"VM_TEST_TERMINATE",id:"vm_test_terminate",level:3},{value:"VM_POLL_LOADED",id:"vm_poll_loaded",level:3},{value:"VM_PUSH_REFERENCE",id:"vm_push_reference",level:3},{value:"VM_CALL_NATIVE",id:"vm_call_native",level:3},{value:"VM_MEMSET",id:"vm_memset",level:3},{value:"VM_MEMCPY",id:"vm_memcpy",level:3},{value:"Actor",id:"actor",level:2},{value:"VM_ACTOR_MOVE_TO",id:"vm_actor_move_to",level:3},{value:"VM_ACTOR_MOVE_CANCEL",id:"vm_actor_move_cancel",level:3},{value:"VM_ACTOR_ACTIVATE",id:"vm_actor_activate",level:3},{value:"VM_ACTOR_SET_DIR",id:"vm_actor_set_dir",level:3},{value:"VM_ACTOR_DEACTIVATE",id:"vm_actor_deactivate",level:3},{value:"VM_ACTOR_SET_ANIM",id:"vm_actor_set_anim",level:3},{value:"VM_ACTOR_SET_POS",id:"vm_actor_set_pos",level:3},{value:"VM_ACTOR_EMOTE",id:"vm_actor_emote",level:3},{value:"VM_ACTOR_SET_BOUNDS",id:"vm_actor_set_bounds",level:3},{value:"VM_ACTOR_SET_SPRITESHEET",id:"vm_actor_set_spritesheet",level:3},{value:"VM_ACTOR_SET_SPRITESHEET_BY_REF",id:"vm_actor_set_spritesheet_by_ref",level:3},{value:"VM_ACTOR_REPLACE_TILE",id:"vm_actor_replace_tile",level:3},{value:"VM_ACTOR_GET_POS",id:"vm_actor_get_pos",level:3},{value:"VM_ACTOR_GET_DIR",id:"vm_actor_get_dir",level:3},{value:"VM_ACTOR_GET_ANGLE",id:"vm_actor_get_angle",level:3},{value:"VM_ACTOR_SET_ANIM_TICK",id:"vm_actor_set_anim_tick",level:3},{value:"VM_ACTOR_SET_MOVE_SPEED",id:"vm_actor_set_move_speed",level:3},{value:"VM_ACTOR_SET_FLAGS",id:"vm_actor_set_flags",level:3},{value:"VM_ACTOR_SET_HIDDEN",id:"vm_actor_set_hidden",level:3},{value:"VM_ACTOR_SET_COLL_ENABLED",id:"vm_actor_set_coll_enabled",level:3},{value:"VM_ACTOR_TERMINATE_UPDATE",id:"vm_actor_terminate_update",level:3},{value:"VM_ACTOR_SET_ANIM_FRAME",id:"vm_actor_set_anim_frame",level:3},{value:"VM_ACTOR_GET_ANIM_FRAME",id:"vm_actor_get_anim_frame",level:3},{value:"VM_ACTOR_SET_ANIM_SET",id:"vm_actor_set_anim_set",level:3},{value:"Camera",id:"camera",level:2},{value:"VM_CAMERA_MOVE_TO",id:"vm_camera_move_to",level:3},{value:"VM_CAMERA_SET_POS",id:"vm_camera_set_pos",level:3},{value:"Color",id:"color",level:2},{value:".DMG_PAL",id:"dmg_pal",level:3},{value:".CGB_PAL",id:"cgb_pal",level:3},{value:"VM_LOAD_PALETTE",id:"vm_load_palette",level:3},{value:"Game Boy",id:"game-boy",level:2},{value:"VM_LOAD_TILES",id:"vm_load_tiles",level:3},{value:"VM_LOAD_TILESET",id:"vm_load_tileset",level:3},{value:"VM_SET_SPRITE_VISIBLE",id:"vm_set_sprite_visible",level:3},{value:"VM_SHOW_SPRITES",id:"vm_show_sprites",level:3},{value:"VM_HIDE_SPRITES",id:"vm_hide_sprites",level:3},{value:"VM_INPUT_WAIT",id:"vm_input_wait",level:3},{value:"VM_INPUT_ATTACH",id:"vm_input_attach",level:3},{value:"VM_INPUT_GET",id:"vm_input_get",level:3},{value:"VM_CONTEXT_PREPARE",id:"vm_context_prepare",level:3},{value:"VM_OVERLAY_SET_MAP",id:"vm_overlay_set_map",level:3},{value:"VM_GET_TILE_XY",id:"vm_get_tile_xy",level:3},{value:"VM_REPLACE_TILE",id:"vm_replace_tile",level:3},{value:"VM_POLL",id:"vm_poll",level:3},{value:"VM_SET_SPRITE_MODE",id:"vm_set_sprite_mode",level:3},{value:"VM_REPLACE_TILE_XY",id:"vm_replace_tile_xy",level:3},{value:"VM_INPUT_DETACH",id:"vm_input_detach",level:3},{value:"GB Printer",id:"gb-printer",level:2},{value:"VM_PRINTER_DETECT",id:"vm_printer_detect",level:3},{value:"VM_PRINT_OVERLAY",id:"vm_print_overlay",level:3},{value:"Load and Save",id:"load-and-save",level:2},{value:".SAVE_SLOT",id:"save_slot",level:3},{value:"VM_SAVE_PEEK",id:"vm_save_peek",level:3},{value:"VM_SAVE_CLEAR",id:"vm_save_clear",level:3},{value:"Math",id:"math",level:2},{value:"VM_SIN_SCALE",id:"vm_sin_scale",level:3},{value:"VM_COS_SCALE",id:"vm_cos_scale",level:3},{value:"Music and Sound",id:"music-and-sound",level:2},{value:"VM_MUSIC_PLAY",id:"vm_music_play",level:3},{value:"VM_MUSIC_STOP",id:"vm_music_stop",level:3},{value:"VM_MUSIC_MUTE",id:"vm_music_mute",level:3},{value:"VM_SOUND_MASTERVOL",id:"vm_sound_mastervol",level:3},{value:"VM_MUSIC_ROUTINE",id:"vm_music_routine",level:3},{value:"VM_SFX_PLAY",id:"vm_sfx_play",level:3},{value:"VM_MUSIC_SETPOS",id:"vm_music_setpos",level:3},{value:"Projectiles",id:"projectiles",level:2},{value:"VM_PROJECTILE_LAUNCH",id:"vm_projectile_launch",level:3},{value:"VM_PROJECTILE_LOAD_TYPE",id:"vm_projectile_load_type",level:3},{value:"RTC",id:"rtc",level:2},{value:"VM_RTC_LATCH",id:"vm_rtc_latch",level:3},{value:"VM_RTC_GET",id:"vm_rtc_get",level:3},{value:"VM_RTC_SET",id:"vm_rtc_set",level:3},{value:"VM_RTC_START",id:"vm_rtc_start",level:3},{value:"Rumble",id:"rumble",level:2},{value:"VM_RUMBLE",id:"vm_rumble",level:3},{value:"Scenes",id:"scenes",level:2},{value:"VM_SCENE_PUSH",id:"vm_scene_push",level:3},{value:"VM_SCENE_POP",id:"vm_scene_pop",level:3},{value:"VM_SCENE_POP_ALL",id:"vm_scene_pop_all",level:3},{value:"VM_SCENE_STACK_RESET",id:"vm_scene_stack_reset",level:3},{value:"Screen Fade",id:"screen-fade",level:2},{value:"VM_FADE",id:"vm_fade",level:3},{value:"VM_FADE_IN",id:"vm_fade_in",level:3},{value:"VM_FADE_OUT",id:"vm_fade_out",level:3},{value:"SGB",id:"sgb",level:2},{value:"VM_SGB_TRANSFER",id:"vm_sgb_transfer",level:3},{value:"SIO",id:"sio",level:2},{value:"VM_SIO_SET_MODE",id:"vm_sio_set_mode",level:3},{value:"VM_SIO_EXCHANGE",id:"vm_sio_exchange",level:3},{value:"Text Sound",id:"text-sound",level:2},{value:"VM_SET_TEXT_SOUND",id:"vm_set_text_sound",level:3},{value:"Timer",id:"timer",level:2},{value:"VM_TIMER_PREPARE",id:"vm_timer_prepare",level:3},{value:"VM_TIMER_SET",id:"vm_timer_set",level:3},{value:"VM_TIMER_STOP",id:"vm_timer_stop",level:3},{value:"VM_TIMER_RESET",id:"vm_timer_reset",level:3},{value:"UI",id:"ui",level:2},{value:"VM_LOAD_TEXT",id:"vm_load_text",level:3},{value:"Displaying variables:",id:"displaying-variables",level:4},{value:"Escape Sequences:",id:"escape-sequences",level:4},{value:"VM_DISPLAY_TEXT_EX",id:"vm_display_text_ex",level:3},{value:"VM_DISPLAY_TEXT",id:"vm_display_text",level:3},{value:"VM_SWITCH_TEXT_LAYER",id:"vm_switch_text_layer",level:3},{value:"VM_OVERLAY_SETPOS",id:"vm_overlay_setpos",level:3},{value:"VM_OVERLAY_HIDE",id:"vm_overlay_hide",level:3},{value:"VM_OVERLAY_WAIT",id:"vm_overlay_wait",level:3},{value:"VM_OVERLAY_MOVE_TO",id:"vm_overlay_move_to",level:3},{value:"VM_OVERLAY_SHOW",id:"vm_overlay_show",level:3},{value:"VM_OVERLAY_CLEAR",id:"vm_overlay_clear",level:3},{value:".MENUITEM",id:"menuitem",level:3},{value:"VM_CHOICE",id:"vm_choice",level:3},{value:"VM_SET_FONT",id:"vm_set_font",level:3},{value:"VM_SET_PRINT_DIR",id:"vm_set_print_dir",level:3},{value:"VM_OVERLAY_SET_SUBMAP_EX",id:"vm_overlay_set_submap_ex",level:3},{value:"VM_OVERLAY_SCROLL",id:"vm_overlay_scroll",level:3},{value:"VM_OVERLAY_SET_SCROLL",id:"vm_overlay_set_scroll",level:3},{value:"VM_OVERLAY_SET_SUBMAP",id:"vm_overlay_set_submap",level:3}],_={toc:p};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},_,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"gbvm-operations"},"GBVM Operations"),(0,n.kt)("h2",{id:"core"},"Core"),(0,n.kt)("h3",{id:"vm_stop"},"VM_STOP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_STOP\n")),(0,n.kt)("p",null," Stops execution of context  "),(0,n.kt)("h3",{id:"vm_push_const"},"VM_PUSH_CONST"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_PUSH_CONST VAL\n")),(0,n.kt)("p",null," Pushes immediate value to the top of the VM stack  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"VAL"),":  immediate value to be pushed  ")),(0,n.kt)("h3",{id:"vm_pop"},"VM_POP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_POP N\n")),(0,n.kt)("p",null," Removes the top values from the VM stack  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"N"),":  number of values to be removed from the stack  ")),(0,n.kt)("h3",{id:"vm_call"},"VM_CALL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_CALL ADDR\n")),(0,n.kt)("p",null," Call script by near address  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  address of the script subroutine  ")),(0,n.kt)("h3",{id:"vm_ret"},"VM_RET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RET\n")),(0,n.kt)("p",null," Returns from the near call  "),(0,n.kt)("h3",{id:"vm_ret_n"},"VM_RET_N"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RET_N N\n")),(0,n.kt)("p",null," Returns from the near call and clear N arguments on stack  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"N"),":  number of arguments to be removed from the stack  ")),(0,n.kt)("h3",{id:"vm_get_far"},"VM_GET_FAR"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_GET_FAR IDX, SIZE, BANK, ADDR\n")),(0,n.kt)("p",null," Get byte or word by the far pointer into variable  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Target variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SIZE"),":  Size of the ojject to be acquired:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".GET_BYTE"),"  - get 8-bit value",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".GET_WORD"),"  - get 16-bit value  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"BANK"),":  Bank number of the object  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the object  ")),(0,n.kt)("h3",{id:"vm_loop"},"VM_LOOP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_LOOP IDX, LABEL, N\n")),(0,n.kt)("p",null," Loops while variable is not zero, by the near address  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Loop counter variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"LABEL"),":  Jump label for the next iteration  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"N"),":  amount of values to be removed from stack on exit  ")),(0,n.kt)("h3",{id:"case"},".CASE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".CASE VAL, LABEL\n")),(0,n.kt)("h3",{id:"vm_switch"},"VM_SWITCH"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SWITCH IDX, SIZE, N\n")),(0,n.kt)("p",null," Compares variable with a set of values, and if equal jump to the specified label.",(0,n.kt)("br",{parentName:"p"}),"\n","values for testing may be defined with the .CASE macro, where VAL parameter is a value for testing and LABEL is a jump label  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  variable for compare  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SIZE"),":  amount of entries for test.  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"N"),":  amount of values to de cleaned from stack on exit  ")),(0,n.kt)("h3",{id:"vm_jump"},"VM_JUMP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_JUMP LABEL\n")),(0,n.kt)("p",null," Jumps to near address  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ARG0"),":  jump label  ")),(0,n.kt)("h3",{id:"vm_call_far"},"VM_CALL_FAR"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_CALL_FAR BANK, ADDR\n")),(0,n.kt)("p",null," Call far routine (inter-bank call)  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"BANK"),":  Bank number of the routine  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the routine  ")),(0,n.kt)("h3",{id:"vm_ret_far"},"VM_RET_FAR"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RET_FAR\n")),(0,n.kt)("p",null," Return from the far call  "),(0,n.kt)("h3",{id:"vm_ret_far_n"},"VM_RET_FAR_N"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RET_FAR_N N\n")),(0,n.kt)("p",null," Return from the far call and remove N arguments from stack  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"N"),":  Number of arguments to be removed from stack  ")),(0,n.kt)("h3",{id:"vm_invoke"},"VM_INVOKE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_INVOKE BANK, ADDR, N, PARAMS\n")),(0,n.kt)("p",null," Invokes C function until it returns true.  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"BANK"),":  Bank number of the function  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the function, currently 2 functions are implemented:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"_wait_frames"),"   - wait for N vblank intervals",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"_camera_shake"),"  - shake camera N times  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"N"),":  Number of arguments to be removed from stack on return  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"PARAMS"),":  Points the first parameter to be passed into the C function  ")),(0,n.kt)("h3",{id:"vm_beginthread"},"VM_BEGINTHREAD"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_BEGINTHREAD BANK, THREADPROC, HTHREAD, NARGS\n")),(0,n.kt)("p",null," Spawns a thread in a separate context  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"BANK"),":  Bank number of a thread function  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"THREADPROC"),":  Address of a thread function  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"HTHREAD"),":  Variable that receives the thread handle  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"NARGS"),":  Amount of values from the stack to be copied into the stack of the new context  ")),(0,n.kt)("h3",{id:"vm_if"},"VM_IF"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_IF CONDITION, IDXA, IDXB, LABEL, N\n")),(0,n.kt)("p",null," Compares two variables using for condition.  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"CONDITION"),":  Condition for test:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".EQ"),"   - variables are equal",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".LT"),"   - A is lower than B",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".LTE"),"  - A is lower or equal than B",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".GT"),"   - A is greater than B",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".GTE"),"  - A is greater or equal than B",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".NE"),"   - A is not equal to B  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  A variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXB"),":  B variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"LABEL"),":  Jump label when result is TRUE  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"N"),":  Number of values to be removed from stack if the result is true  ")),(0,n.kt)("h3",{id:"vm_push_value_ind"},"VM_PUSH_VALUE_IND"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_PUSH_VALUE_IND IDX\n")),(0,n.kt)("p",null," Pushes a value on VM stack or a global indirectly from an index in the variable  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  variable that contains the index of the variable to be pushed on stack  ")),(0,n.kt)("h3",{id:"vm_push_value"},"VM_PUSH_VALUE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_PUSH_VALUE IDX\n")),(0,n.kt)("p",null," Pushes a value of the variable onto stack  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  variable to be pushed  ")),(0,n.kt)("h3",{id:"vm_reserve"},"VM_RESERVE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RESERVE N\n")),(0,n.kt)("p",null," Reserves or disposes amount of values on stack  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"N"),":  positive value - amount of variables to be reserved on stack, negative value - amount of variables to be popped from stack  ")),(0,n.kt)("h3",{id:"vm_set"},"VM_SET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET IDXA, IDXB\n")),(0,n.kt)("p",null," Assigns variable B to variable A  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  Variable A  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXB"),":  Variable B  ")),(0,n.kt)("h3",{id:"vm_set_const"},"VM_SET_CONST"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_CONST IDX, VAL\n")),(0,n.kt)("p",null," Assigns immediate value to the variable  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Target variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"VAL"),":  Source immediate value  ")),(0,n.kt)("h3",{id:"vm_rpn"},"VM_RPN"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RPN\n")),(0,n.kt)("p",null," Reverse Polish Notation (RPN) calculator, returns result(s) on the VM stack  "),(0,n.kt)("h3",{id:"r_int8"},".R_INT8"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".R_INT8 ARG0\n")),(0,n.kt)("h3",{id:"r_int16"},".R_INT16"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".R_INT16 ARG0\n")),(0,n.kt)("h3",{id:"r_ref"},".R_REF"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".R_REF ARG0\n")),(0,n.kt)("h3",{id:"r_ref_ind"},".R_REF_IND"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".R_REF_IND ARG0\n")),(0,n.kt)("h3",{id:"r_ref_set"},".R_REF_SET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".R_REF_SET ARG0\n")),(0,n.kt)("h3",{id:"r_operator"},".R_OPERATOR"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".R_OPERATOR ARG0\n")),(0,n.kt)("h3",{id:"r_stop"},".R_STOP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".R_STOP\n")),(0,n.kt)("h3",{id:"vm_join"},"VM_JOIN"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_JOIN IDX\n")),(0,n.kt)("p",null," Joins a thread  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Thread handle for joining  ")),(0,n.kt)("h3",{id:"vm_terminate"},"VM_TERMINATE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_TERMINATE IDX\n")),(0,n.kt)("p",null," Kills a thread  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Thread handle for killing  ")),(0,n.kt)("h3",{id:"vm_idle"},"VM_IDLE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_IDLE\n")),(0,n.kt)("p",null," Signals thread runner, that context is in a waitable state  "),(0,n.kt)("h3",{id:"vm_get_tlocal"},"VM_GET_TLOCAL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_GET_TLOCAL IDXA, IDXB\n")),(0,n.kt)("p",null," Gets thread local variable.  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  Target variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXB"),":  Thread local variable index  ")),(0,n.kt)("h3",{id:"vm_if_const"},"VM_IF_CONST"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_IF_CONST CONDITION, IDXA, B, LABEL, N\n")),(0,n.kt)("p",null," Compares a variable to an immediate value  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"CONDITION"),":  Condition for test:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".EQ"),"   - variables are equal",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".LT"),"   - A is lower than B",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".LTE"),"  - A is lower or equal than B",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".GT"),"   - A is greater than B",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".GTE"),"  - A is greater or equal than B",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".NE"),"   - A is not equal to B  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  A variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"B"),":  immediate value to be compared with  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"LABEL"),":  Jump label when result is TRUE  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"N"),":  Number of values to be removed from stack if the result is true  ")),(0,n.kt)("h3",{id:"vm_get_uint8"},"VM_GET_UINT8"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_GET_UINT8 IDXA, ADDR\n")),(0,n.kt)("p",null," Gets unsigned int8 from WRAM  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  Target variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the unsigned 8-bit value in WRAM  ")),(0,n.kt)("h3",{id:"vm_get_int8"},"VM_GET_INT8"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_GET_INT8 IDXA, ADDR\n")),(0,n.kt)("p",null," Gets signed int8 from WRAM  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  Target variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the signed 8-bit value in WRAM  ")),(0,n.kt)("h3",{id:"vm_get_int16"},"VM_GET_INT16"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_GET_INT16 IDXA, ADDR\n")),(0,n.kt)("p",null," Gets signed int16 from WRAM  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  Target variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the signed 16-bit value in WRAM  ")),(0,n.kt)("h3",{id:"vm_set_uint8"},"VM_SET_UINT8"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_UINT8 ADDR, IDXA\n")),(0,n.kt)("p",null," Sets unsigned int8 in WRAM from variable  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the unsigned 8-bit value in WRAM  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  Source variable  ")),(0,n.kt)("h3",{id:"vm_set_int8"},"VM_SET_INT8"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_INT8 ADDR, IDXA\n")),(0,n.kt)("p",null," Sets signed int8 in WRAM from variable  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the signed 8-bit value in WRAM  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  Source variable  ")),(0,n.kt)("h3",{id:"vm_set_int16"},"VM_SET_INT16"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_INT16 ADDR, IDXA\n")),(0,n.kt)("p",null," Sets signed int16 in WRAM from variable  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the signed 16-bit value in WRAM  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  Source variable  ")),(0,n.kt)("h3",{id:"vm_set_const_int8"},"VM_SET_CONST_INT8"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_CONST_INT8 ADDR, V\n")),(0,n.kt)("p",null," Sets signed int8 in WRAM to the immediate value  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the signed 8-bit value in WRAM  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"V"),":  Immediate value  ")),(0,n.kt)("h3",{id:"vm_set_const_uint8"},"VM_SET_CONST_UINT8"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_CONST_UINT8 ADDR, V\n")),(0,n.kt)("p",null," Sets unsigned int8 in WRAM to the immediate value  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the unsigned 8-bit value in WRAM  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"V"),":  Immediate value  ")),(0,n.kt)("h3",{id:"vm_set_const_int16"},"VM_SET_CONST_INT16"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_CONST_INT16 ADDR, V\n")),(0,n.kt)("p",null," Sets signed int16 in WRAM to the immediate value  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the signed 16-bit value in WRAM  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"V"),":  Immediate value  ")),(0,n.kt)("h3",{id:"vm_init_rng"},"VM_INIT_RNG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_INIT_RNG IDX\n")),(0,n.kt)("p",null," Initializes RNG seed with the value from the variable  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Seed value  ")),(0,n.kt)("h3",{id:"vm_randomize"},"VM_RANDOMIZE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RANDOMIZE\n")),(0,n.kt)("p",null," Initializes RNG seed  "),(0,n.kt)("h3",{id:"vm_rand"},"VM_RAND"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RAND IDX, MIN, LIMIT\n")),(0,n.kt)("p",null," Returns random value between MIN and MIN + LIMIT  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Target variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"MIN"),":  Minimal random value  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"LIMIT"),":  range of the random values  ")),(0,n.kt)("h3",{id:"vm_lock"},"VM_LOCK"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_LOCK\n")),(0,n.kt)("p",null," Disable switching of VM threads  "),(0,n.kt)("h3",{id:"vm_unlock"},"VM_UNLOCK"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_UNLOCK\n")),(0,n.kt)("p",null," Enable switching of VM threads  "),(0,n.kt)("h3",{id:"vm_raise"},"VM_RAISE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RAISE CODE, SIZE\n")),(0,n.kt)("p",null," Raises an exception  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"CODE"),":  Exception code:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"EXCEPTION_RESET"),"        - Resets the device.",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"EXCEPTION_CHANGE_SCENE")," - Changes to a new scene.",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"EXCEPTION_SAVE"),"         - Saves the state of the game.",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"EXCEPTION_LOAD"),"         - Loads the saved state of the game.  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SIZE"),":  Length of the parameters to be passed into the exception handler  ")),(0,n.kt)("h3",{id:"vm_set_indirect"},"VM_SET_INDIRECT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_INDIRECT IDXA, IDXB\n")),(0,n.kt)("p",null," Assigns variable that is addressed indirectly to the other variable  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  Variable that contains the index of the target variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXB"),":  Source variable that contains the value to be assigned  ")),(0,n.kt)("h3",{id:"vm_get_indirect"},"VM_GET_INDIRECT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_GET_INDIRECT IDXA, IDXB\n")),(0,n.kt)("p",null," Assigns a variable to the value of variable that is addressed indirectly  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXA"),":  Target variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDXB"),":  Variable that contains the index of the source variable  ")),(0,n.kt)("h3",{id:"vm_test_terminate"},"VM_TEST_TERMINATE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_TEST_TERMINATE FLAGS\n")),(0,n.kt)("p",null," Terminates unit-testing immediately  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"FLAGS"),":  terminate flags:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".TEST_WAIT_VBL")," wait for VBlank before terminating  ")),(0,n.kt)("h3",{id:"vm_poll_loaded"},"VM_POLL_LOADED"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_POLL_LOADED IDX\n")),(0,n.kt)("p",null," Checks that VM state was restored and reset the restore flag  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Target result variable  ")),(0,n.kt)("h3",{id:"vm_push_reference"},"VM_PUSH_REFERENCE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_PUSH_REFERENCE IDX\n")),(0,n.kt)("p",null," Translates IDX into absolute index and pushes result to VM stack  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  index of the variable  ")),(0,n.kt)("h3",{id:"vm_call_native"},"VM_CALL_NATIVE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_CALL_NATIVE BANK, PTR\n")),(0,n.kt)("p",null," Calls native code by the far pointer  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"BANK"),":  Bank number of the native routine  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"PTR"),":  Address of the native routine  ")),(0,n.kt)("h3",{id:"vm_memset"},"VM_MEMSET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_MEMSET DEST, VALUE, COUNT\n")),(0,n.kt)("p",null," Clear VM memory  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DEST"),":  First variable to be cleared  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"VALUE"),":  Variable containing the value to be filled with  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"COUNT"),":  Number of variables to be filled  ")),(0,n.kt)("h3",{id:"vm_memcpy"},"VM_MEMCPY"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_MEMCPY DEST, SOUR, COUNT\n")),(0,n.kt)("p",null," copy VM memory  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DEST"),":  First destination variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SOUR"),":  First source variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"COUNT"),":  Number of variables to be copied  ")),(0,n.kt)("h2",{id:"actor"},"Actor"),(0,n.kt)("h3",{id:"vm_actor_move_to"},"VM_ACTOR_MOVE_TO"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_MOVE_TO IDX\n")),(0,n.kt)("p",null," Move actor to the new position  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  points to the beginning of the pseudo-structure that contains these members:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"ID"),"   - Actor number",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"X"),"    - New X-coordinate of the actor",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"Y"),"    - New Y-coordinate of the actor",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"ATTR")," - Bit flags:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_ATTR_H_FIRST"),"    - move horizontal first",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_ATTR_CHECK_COLL")," - respect collisions",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_ATTR_DIAGONAL"),"   - allow diagonal movement  ")),(0,n.kt)("h3",{id:"vm_actor_move_cancel"},"VM_ACTOR_MOVE_CANCEL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_MOVE_CANCEL ACTOR\n")),(0,n.kt)("p",null," Cancel movement of actor  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  ")),(0,n.kt)("h3",{id:"vm_actor_activate"},"VM_ACTOR_ACTIVATE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_ACTIVATE ACTOR\n")),(0,n.kt)("p",null," Activate the actor  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  ")),(0,n.kt)("h3",{id:"vm_actor_set_dir"},"VM_ACTOR_SET_DIR"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_DIR ACTOR, DIR\n")),(0,n.kt)("p",null," Set direction of the actor  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DIR"),":  one of these directions:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".DIR_DOWN"),"   - actor faces down",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".DIR_RIGHT"),"  - actor faces right",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".DIR_UP"),"     - actor faces up",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".DIR_LEFT"),"   - actor faces left  ")),(0,n.kt)("h3",{id:"vm_actor_deactivate"},"VM_ACTOR_DEACTIVATE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_DEACTIVATE ACTOR\n")),(0,n.kt)("p",null," Deactivate the actor  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  ")),(0,n.kt)("h3",{id:"vm_actor_set_anim"},"VM_ACTOR_SET_ANIM"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_ANIM ACTOR, ANIM\n")),(0,n.kt)("p",null," Set actor animation  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ANIM"),":  Animation number  ")),(0,n.kt)("h3",{id:"vm_actor_set_pos"},"VM_ACTOR_SET_POS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_POS IDX\n")),(0,n.kt)("p",null," Set new actor position  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  points to the beginning of the pseudo-structure that contains these members:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"ID"),"   - Actor number",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"X"),"    - New X-coordinate of the actor",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"Y"),"    - New Y-coordinate of the actor  ")),(0,n.kt)("h3",{id:"vm_actor_emote"},"VM_ACTOR_EMOTE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_EMOTE ACTOR, AVATAR_BANK, AVATAR\n")),(0,n.kt)("p",null," Set actor emotion  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"AVATAR_BANK"),":  Bank of the avatar image  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"AVATAR"),":  Address of the avatar image  ")),(0,n.kt)("h3",{id:"vm_actor_set_bounds"},"VM_ACTOR_SET_BOUNDS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_BOUNDS ACTOR, LEFT, RIGHT, TOP, BOTTOM\n")),(0,n.kt)("p",null," Set actor bounding box  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"LEFT"),":  Left boundary of the bounding box  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"RIGHT"),":  Right boundary of the bounding box  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"TOP"),":  Top boundary of the bounding box  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"BOTTOM"),":  Bottom boundary of the bounding box  ")),(0,n.kt)("h3",{id:"vm_actor_set_spritesheet"},"VM_ACTOR_SET_SPRITESHEET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_SPRITESHEET ACTOR, SHEET_BANK, SHEET\n")),(0,n.kt)("p",null," Set actor spritesheet  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SHEET_BANK"),":  Bank of the sprite sheet  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SHEET"),":  Address of the sprite sheet  ")),(0,n.kt)("h3",{id:"vm_actor_set_spritesheet_by_ref"},"VM_ACTOR_SET_SPRITESHEET_BY_REF"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_SPRITESHEET_BY_REF ACTOR, FAR_PTR\n")),(0,n.kt)("p",null," Set actor spritesheet using far the pointer in variables  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"FAR_PTR"),":  points to the pseudo-struct that contains the address of the sprite sheet:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"BANK")," - Bank of the sprite sheet",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"DATA")," - Address of the sprite sheet  ")),(0,n.kt)("h3",{id:"vm_actor_replace_tile"},"VM_ACTOR_REPLACE_TILE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_REPLACE_TILE ACTOR, TARGET_TILE, TILEDATA_BANK, TILEDATA, START, LEN\n")),(0,n.kt)("p",null," Replace tile in the actor spritesheet  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"TARGET_TILE"),":  Tile number for replacement  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"TILEDATA_BANK"),":  Bank of the tile data  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"TILEDATA"),":  Address of the tile data  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"START"),":  Start tile in the tile data array  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"LEN"),":  Amount of tiles for replacing  ")),(0,n.kt)("h3",{id:"vm_actor_get_pos"},"VM_ACTOR_GET_POS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_GET_POS IDX\n")),(0,n.kt)("p",null," Get actor position  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  points to the beginning of the pseudo-structure that contains these members:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"ID"),"   - Actor number",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"X"),"    - X-coordinate of the actor",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"Y"),"    - Y-coordinate of the actor  ")),(0,n.kt)("h3",{id:"vm_actor_get_dir"},"VM_ACTOR_GET_DIR"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_GET_DIR IDX, DEST\n")),(0,n.kt)("p",null," Get direction of the actor  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DEST"),":  Target variable that receive the actor direction  ")),(0,n.kt)("h3",{id:"vm_actor_get_angle"},"VM_ACTOR_GET_ANGLE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_GET_ANGLE IDX, DEST\n")),(0,n.kt)("p",null," Get actor angle  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DEST"),":  Target variable that receive the actor angle  ")),(0,n.kt)("h3",{id:"vm_actor_set_anim_tick"},"VM_ACTOR_SET_ANIM_TICK"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_ANIM_TICK ACTOR, TICK\n")),(0,n.kt)("p",null," Set actor animation tick  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"TICK"),":  Animation tick  ")),(0,n.kt)("h3",{id:"vm_actor_set_move_speed"},"VM_ACTOR_SET_MOVE_SPEED"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_MOVE_SPEED ACTOR, SPEED\n")),(0,n.kt)("p",null," Set actor move speed  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SPEED"),":  Actor move speed  ")),(0,n.kt)("h3",{id:"vm_actor_set_flags"},"VM_ACTOR_SET_FLAGS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_FLAGS ACTOR, FLAGS, MASK\n")),(0,n.kt)("p",null," Set actor flags  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"FLAGS"),":  bit values to be set or cleared:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_FLAG_PINNED"),"      - pin/unpin the actor",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_FLAG_HIDDEN"),"      - hide/show actor",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_FLAG_ANIM_NOLOOP")," - disable animation loop",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_FLAG_COLLISION"),"   - disable/enable collision",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_FLAG_PERSISTENT"),"  - set persistent actor flag  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"MASK"),":  bit mask of values to be set or cleared  ")),(0,n.kt)("h3",{id:"vm_actor_set_hidden"},"VM_ACTOR_SET_HIDDEN"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_HIDDEN ACTOR, HIDDEN\n")),(0,n.kt)("p",null," Hide/show actor  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"HIDDEN"),":  ",(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_VISIBLE")," shows actor, ",(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_HIDDEN")," hides the actor  ")),(0,n.kt)("h3",{id:"vm_actor_set_coll_enabled"},"VM_ACTOR_SET_COLL_ENABLED"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_COLL_ENABLED ACTOR, ENABLED\n")),(0,n.kt)("p",null," Enable/disable actor collisions  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ENABLED"),":  ",(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_COLLISION_DISABLED")," disables actor collision, ",(0,n.kt)("inlineCode",{parentName:"li"},".ACTOR_COLLISION_ENABLED")," enables actor collision  ")),(0,n.kt)("h3",{id:"vm_actor_terminate_update"},"VM_ACTOR_TERMINATE_UPDATE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_TERMINATE_UPDATE ACTOR\n")),(0,n.kt)("p",null," Terminates the actor update script  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  ")),(0,n.kt)("h3",{id:"vm_actor_set_anim_frame"},"VM_ACTOR_SET_ANIM_FRAME"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_ANIM_FRAME ACTOR\n")),(0,n.kt)("p",null," Set animation frame for the actor  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  pseudo-struct that contains these members:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"ID"),"    - Actor number",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"FRAME")," - Animation frame  ")),(0,n.kt)("h3",{id:"vm_actor_get_anim_frame"},"VM_ACTOR_GET_ANIM_FRAME"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_GET_ANIM_FRAME ACTOR\n")),(0,n.kt)("p",null," Get animation frame of the actor  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  pseudo-struct that contains these members:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"ID"),"    - Actor number",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"FRAME")," - Animation frame  ")),(0,n.kt)("h3",{id:"vm_actor_set_anim_set"},"VM_ACTOR_SET_ANIM_SET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_ACTOR_SET_ANIM_SET ACTOR, OFFSET\n")),(0,n.kt)("p",null," Set animation frame for the actor  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ACTOR"),":  Variable that contains the actor number  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"OFFSET"),":  Animation set number  ")),(0,n.kt)("h2",{id:"camera"},"Camera"),(0,n.kt)("h3",{id:"vm_camera_move_to"},"VM_CAMERA_MOVE_TO"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_CAMERA_MOVE_TO IDX, SPEED, AFTER_LOCK\n")),(0,n.kt)("p",null," Moves the camera to the new position  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Start of the pseudo-structure which contains the new camera position:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"X")," - X-coordinate of the camera position",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"Y")," - Y-coordinate of the camera position  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SPEED"),":  Speed of the camera movement  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"AFTER_LOCK"),":  Lock status of the camera after the movement",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".CAMERA_LOCK"),"   - lock camera by X and Y",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".CAMERA_LOCK_X")," - lock camera by X",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".CAMERA_LOCK_Y")," - lock camera by Y",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".CAMERA_UNLOCK")," - unlock camera  ")),(0,n.kt)("h3",{id:"vm_camera_set_pos"},"VM_CAMERA_SET_POS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_CAMERA_SET_POS IDX\n")),(0,n.kt)("p",null," Sets the camera position  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Start of the pseudo-structure which contains the new camera position:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"X")," - X-coordinate of the camera position",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"Y")," - Y-coordinate of the camera position  ")),(0,n.kt)("h2",{id:"color"},"Color"),(0,n.kt)("h3",{id:"dmg_pal"},".DMG_PAL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".DMG_PAL COL1, COL2, COL3, COL4\n")),(0,n.kt)("h3",{id:"cgb_pal"},".CGB_PAL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".CGB_PAL R1,G1,B1 R2,G2,B2 R3,G3,B3 R4,G4,B4\n")),(0,n.kt)("h3",{id:"vm_load_palette"},"VM_LOAD_PALETTE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_LOAD_PALETTE MASK, OPTIONS\n")),(0,n.kt)("h2",{id:"game-boy"},"Game Boy"),(0,n.kt)("h3",{id:"vm_load_tiles"},"VM_LOAD_TILES"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_LOAD_TILES ID, LEN, BANK, ADDR\n")),(0,n.kt)("h3",{id:"vm_load_tileset"},"VM_LOAD_TILESET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_LOAD_TILESET IDX, BANK, BKG\n")),(0,n.kt)("p",null,"Loads a new tileset into the background VRAM tiles starting at a given tile id (",(0,n.kt)("inlineCode",{parentName:"p"},"IDX"),").  "),(0,n.kt)("h3",{id:"vm_set_sprite_visible"},"VM_SET_SPRITE_VISIBLE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_SPRITE_VISIBLE MODE\n")),(0,n.kt)("h3",{id:"vm_show_sprites"},"VM_SHOW_SPRITES"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SHOW_SPRITES\n")),(0,n.kt)("h3",{id:"vm_hide_sprites"},"VM_HIDE_SPRITES"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_HIDE_SPRITES\n")),(0,n.kt)("h3",{id:"vm_input_wait"},"VM_INPUT_WAIT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_INPUT_WAIT MASK\n")),(0,n.kt)("h3",{id:"vm_input_attach"},"VM_INPUT_ATTACH"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_INPUT_ATTACH MASK, SLOT\n")),(0,n.kt)("h3",{id:"vm_input_get"},"VM_INPUT_GET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_INPUT_GET IDX, JOYID\n")),(0,n.kt)("h3",{id:"vm_context_prepare"},"VM_CONTEXT_PREPARE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_CONTEXT_PREPARE SLOT, BANK, ADDR\n")),(0,n.kt)("h3",{id:"vm_overlay_set_map"},"VM_OVERLAY_SET_MAP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_SET_MAP IDX, X_IDX, Y_IDX, BANK, BKG\n")),(0,n.kt)("h3",{id:"vm_get_tile_xy"},"VM_GET_TILE_XY"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_GET_TILE_XY TILE_IDX, X_IDX, Y_IDX\n")),(0,n.kt)("h3",{id:"vm_replace_tile"},"VM_REPLACE_TILE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_REPLACE_TILE TARGET_TILE_IDX, TILEDATA_BANK, TILEDATA, START_IDX, LEN\n")),(0,n.kt)("h3",{id:"vm_poll"},"VM_POLL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_POLL IDX_EVENT, IDX_VALUE, MASK\n")),(0,n.kt)("h3",{id:"vm_set_sprite_mode"},"VM_SET_SPRITE_MODE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_SPRITE_MODE MODE\n")),(0,n.kt)("h3",{id:"vm_replace_tile_xy"},"VM_REPLACE_TILE_XY"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_REPLACE_TILE_XY X, Y, TILEDATA_BANK, TILEDATA, START_IDX\n")),(0,n.kt)("h3",{id:"vm_input_detach"},"VM_INPUT_DETACH"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_INPUT_DETACH MASK\n")),(0,n.kt)("h2",{id:"gb-printer"},"GB Printer"),(0,n.kt)("h3",{id:"vm_printer_detect"},"VM_PRINTER_DETECT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_PRINTER_DETECT ERROR, DELAY\n")),(0,n.kt)("p",null," Detect printer  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ERROR"),":  Target variable that receives the result of detection  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DELAY"),":  Detection timeout  ")),(0,n.kt)("h3",{id:"vm_print_overlay"},"VM_PRINT_OVERLAY"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_PRINT_OVERLAY ERROR, START, HEIGHT, MARGIN\n")),(0,n.kt)("p",null," Print up to HEIGHT rows of the overlay window (must be multiple of 2)  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ERROR"),":  Target variable that receives the result of printing  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"START"),":  Start line of the overlay window  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"HEIGHT"),":  Amount of lines to print  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"MARGIN"),":  Lines to feed after the printing is finished  ")),(0,n.kt)("h2",{id:"load-and-save"},"Load and Save"),(0,n.kt)("h3",{id:"save_slot"},".SAVE_SLOT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".SAVE_SLOT SLOT\n")),(0,n.kt)("h3",{id:"vm_save_peek"},"VM_SAVE_PEEK"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SAVE_PEEK RES, DEST, SOUR, COUNT, SLOT\n")),(0,n.kt)("p",null," Reads variables from the save slot  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"RES"),":  Result of the operation  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DEST"),":  First destination variable to be read into  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SOUR"),":  First source variable in the save slot  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"COUNT"),":  Number of variables to be read  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SLOT"),":  Save slot number  ")),(0,n.kt)("h3",{id:"vm_save_clear"},"VM_SAVE_CLEAR"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SAVE_CLEAR SLOT\n")),(0,n.kt)("p",null," Erases data in save slot  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SLOT"),":  Slot number  ")),(0,n.kt)("h2",{id:"math"},"Math"),(0,n.kt)("h3",{id:"vm_sin_scale"},"VM_SIN_SCALE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SIN_SCALE IDX, IDX_ANGLE, SCALE\n")),(0,n.kt)("h3",{id:"vm_cos_scale"},"VM_COS_SCALE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_COS_SCALE IDX, IDX_ANGLE, SCALE\n")),(0,n.kt)("h2",{id:"music-and-sound"},"Music and Sound"),(0,n.kt)("h3",{id:"vm_music_play"},"VM_MUSIC_PLAY"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_MUSIC_PLAY TRACK_BANK, TRACK, LOOP\n")),(0,n.kt)("p",null," Starts playing of music track  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"BANK"),":  Bank number of the track  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the track  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"LOOP"),":  If the track will loop on end (",(0,n.kt)("inlineCode",{parentName:"li"},".MUSIC_LOOP"),") or not (",(0,n.kt)("inlineCode",{parentName:"li"},".MUSIC_NO_LOOP"),")  ")),(0,n.kt)("h3",{id:"vm_music_stop"},"VM_MUSIC_STOP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_MUSIC_STOP\n")),(0,n.kt)("p",null," Stops playing of music track  "),(0,n.kt)("h3",{id:"vm_music_mute"},"VM_MUSIC_MUTE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_MUSIC_MUTE MASK\n")),(0,n.kt)("p",null," Mutes/unmutes mysic channels.  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"MASK"),":  Mute Mask. The 4 lower bits represent the 4 audio channels.  ")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"th"},"MASK")),(0,n.kt)("th",{parentName:"tr",align:null},"Channel 1"),(0,n.kt)("th",{parentName:"tr",align:null},"Channel 2"),(0,n.kt)("th",{parentName:"tr",align:null},"Channel 3"),(0,n.kt)("th",{parentName:"tr",align:null},"Channel 4"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b0000")),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b0001")),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b0010")),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b0011")),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b0100")),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b0101")),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b0110")),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b0111")),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b1000")),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b1001")),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b1010")),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b1011")),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b1100")),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b1101")),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b1110")),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Muted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"0b1111")),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted"),(0,n.kt)("td",{parentName:"tr",align:null},"Not Muted")))),(0,n.kt)("h3",{id:"vm_sound_mastervol"},"VM_SOUND_MASTERVOL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SOUND_MASTERVOL VOL\n")),(0,n.kt)("p",null," Sets master volume  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"VOL"),":  The volume value  ")),(0,n.kt)("h3",{id:"vm_music_routine"},"VM_MUSIC_ROUTINE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_MUSIC_ROUTINE ROUTINE, BANK, ADDR\n")),(0,n.kt)("p",null," Attach script to music event  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ROUTINE"),":  The routine Id. An integer between 0 and 3.  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"BANK"),":  Bank number of the routine  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the routine  ")),(0,n.kt)("h3",{id:"vm_sfx_play"},"VM_SFX_PLAY"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SFX_PLAY BANK, ADDR, MASK, PRIO\n")),(0,n.kt)("p",null," Play a sound effect asset  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"BANK"),":  Bank number of the effect  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the effect  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"MASK"),":  Mute mask of the effect  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"PRIO"),":  Priority of the sound effect. Effects with higher priority will cancel the ones with less priority:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".SFX_PRIORITY_MINIMAL")," - Minmium priority for playback",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".SFX_PRIORITY_NORMAL"),"  - Normal priority for playback0",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".SFX_PRIORITY_HIGH"),"    - High priority for playback  ")),(0,n.kt)("h3",{id:"vm_music_setpos"},"VM_MUSIC_SETPOS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_MUSIC_SETPOS PATTERN, ROW\n")),(0,n.kt)("p",null," Sets playback position for the current song.  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"PATTERN"),":     - The pattern to set the song position to  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ROW"),":         - The row to set the song position to  ")),(0,n.kt)("h2",{id:"projectiles"},"Projectiles"),(0,n.kt)("h3",{id:"vm_projectile_launch"},"VM_PROJECTILE_LAUNCH"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_PROJECTILE_LAUNCH TYPE, IDX\n")),(0,n.kt)("h3",{id:"vm_projectile_load_type"},"VM_PROJECTILE_LOAD_TYPE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_PROJECTILE_LOAD_TYPE TYPE, BANK, ADDR\n")),(0,n.kt)("h2",{id:"rtc"},"RTC"),(0,n.kt)("h3",{id:"vm_rtc_latch"},"VM_RTC_LATCH"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RTC_LATCH\n")),(0,n.kt)("p",null," Latch RTC value for access  "),(0,n.kt)("h3",{id:"vm_rtc_get"},"VM_RTC_GET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RTC_GET IDX, WHAT\n")),(0,n.kt)("p",null," Read RTC value  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Target variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"WHAT"),":  RTC value to be read",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".RTC_SECONDS")," - Seconds",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".RTC_MINUTES")," - Minutes",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".RTC_HOURS"),"   - Hours",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".RTC_DAYS"),"    - Days  ")),(0,n.kt)("h3",{id:"vm_rtc_set"},"VM_RTC_SET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RTC_SET IDX, WHAT\n")),(0,n.kt)("p",null," Write RTC value  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Source variable  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"WHAT"),":  RTC value to be written",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".RTC_SECONDS")," - Seconds",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".RTC_MINUTES")," - Minutes",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".RTC_HOURS"),"   - Hours",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".RTC_DAYS"),"    - Days  ")),(0,n.kt)("h3",{id:"vm_rtc_start"},"VM_RTC_START"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RTC_START START\n")),(0,n.kt)("p",null," Start or stop RTC  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"START"),":  Start or stop flag",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".RTC_STOP"),"    - stop RTC",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".RTC_START"),"   - start RTC  ")),(0,n.kt)("h2",{id:"rumble"},"Rumble"),(0,n.kt)("h3",{id:"vm_rumble"},"VM_RUMBLE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_RUMBLE ENABLE\n")),(0,n.kt)("p",null," Enables or disables rumble on a cart that has that function  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ENABLE"),":  1 - enable or 0 - disable  ")),(0,n.kt)("h2",{id:"scenes"},"Scenes"),(0,n.kt)("h3",{id:"vm_scene_push"},"VM_SCENE_PUSH"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SCENE_PUSH\n")),(0,n.kt)("p",null," Pushes the current scene to the scene stack.  "),(0,n.kt)("h3",{id:"vm_scene_pop"},"VM_SCENE_POP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SCENE_POP\n")),(0,n.kt)("p",null," Removes the last scene from the scene stack an loads it.  "),(0,n.kt)("h3",{id:"vm_scene_pop_all"},"VM_SCENE_POP_ALL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SCENE_POP_ALL\n")),(0,n.kt)("p",null," Removes all scenes from the scene stack and loads the first one.  "),(0,n.kt)("h3",{id:"vm_scene_stack_reset"},"VM_SCENE_STACK_RESET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SCENE_STACK_RESET\n")),(0,n.kt)("p",null," Removes all the scenes from the scene stack.  "),(0,n.kt)("h2",{id:"screen-fade"},"Screen Fade"),(0,n.kt)("h3",{id:"vm_fade"},"VM_FADE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_FADE FLAGS\n")),(0,n.kt)("h3",{id:"vm_fade_in"},"VM_FADE_IN"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_FADE_IN IS_MODAL\n")),(0,n.kt)("h3",{id:"vm_fade_out"},"VM_FADE_OUT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_FADE_OUT IS_MODAL\n")),(0,n.kt)("h2",{id:"sgb"},"SGB"),(0,n.kt)("h3",{id:"vm_sgb_transfer"},"VM_SGB_TRANSFER"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SGB_TRANSFER\n")),(0,n.kt)("p",null," Transfers SGB packet(s). Data of variable length is placed after this instruction, for example:  "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"VM_SGB_TRANSFER  \n.db ((0x04 &lt;&lt; 3) | 1), 1, 0x07, ((0x01 &lt;&lt; 4) | (0x02 &lt;&lt; 2) | 0x03), 5,5, 10,10,  0, 0, 0, 0, 0, 0, 0, 0 ; ATTR_BLK packet  \n")),(0,n.kt)("p",null,"SGB packet size is a multiple of 16 bytes and encoded in the packet itself.  "),(0,n.kt)("h2",{id:"sio"},"SIO"),(0,n.kt)("h3",{id:"vm_sio_set_mode"},"VM_SIO_SET_MODE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SIO_SET_MODE MODE\n")),(0,n.kt)("h3",{id:"vm_sio_exchange"},"VM_SIO_EXCHANGE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SIO_EXCHANGE SOUR, DEST, SIZE\n")),(0,n.kt)("h2",{id:"text-sound"},"Text Sound"),(0,n.kt)("h3",{id:"vm_set_text_sound"},"VM_SET_TEXT_SOUND"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_TEXT_SOUND BANK, ADDR, MASK\n")),(0,n.kt)("p",null," Set the sound effect for the text output  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"BANK"),":  Bank number of the effect  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"ADDR"),":  Address of the effect  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"MASK"),":  Mute mask of the effect  ")),(0,n.kt)("h2",{id:"timer"},"Timer"),(0,n.kt)("h3",{id:"vm_timer_prepare"},"VM_TIMER_PREPARE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_TIMER_PREPARE TIMER, BANK, ADDR\n")),(0,n.kt)("p",null,"Load script into timer context  "),(0,n.kt)("h3",{id:"vm_timer_set"},"VM_TIMER_SET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_TIMER_SET TIMER, INTERVAL\n")),(0,n.kt)("p",null,"Start a timer calling once every ",(0,n.kt)("inlineCode",{parentName:"p"},"INTERVAL")," * 16 frames  "),(0,n.kt)("h3",{id:"vm_timer_stop"},"VM_TIMER_STOP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_TIMER_STOP TIMER\n")),(0,n.kt)("p",null,"Stop a timer  "),(0,n.kt)("h3",{id:"vm_timer_reset"},"VM_TIMER_RESET"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_TIMER_RESET TIMER\n")),(0,n.kt)("p",null,"Reset a timers countdown to 0  "),(0,n.kt)("h2",{id:"ui"},"UI"),(0,n.kt)("h3",{id:"vm_load_text"},"VM_LOAD_TEXT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_LOAD_TEXT NARGS\n")),(0,n.kt)("p",null," Loads a text in memory  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"NARGS"),":  Amount of arguments that are passed before the null-terminated string  ")),(0,n.kt)("p",null,"The text string is defined using the ",(0,n.kt)("inlineCode",{parentName:"p"},".asciz")," command:  "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'VM_LOAD_TEXT   0  \n.asciz "text to render"  \n')),(0,n.kt)("h4",{id:"displaying-variables"},"Displaying variables:"),(0,n.kt)("p",null,"The following format specifiers allow to render variables as part of the text:  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"%d"),"  Render a variable value  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"%Dn")," Render a variable value with ",(0,n.kt)("inlineCode",{parentName:"li"},"n")," length  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"%c"),"  Render a character based on the variable value",(0,n.kt)("br",{parentName:"li"}),"The variables need to be defined before the ",(0,n.kt)("inlineCode",{parentName:"li"},".asciz")," call using ",(0,n.kt)("inlineCode",{parentName:"li"},".dw")," followed by a list of ",(0,n.kt)("inlineCode",{parentName:"li"},"N")," variables in the order they'll be rendered.  ")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'VM_LOAD_TEXT   3  \n.dw VAR_0, VAR_1, VAR_1  \n.asciz "Var 0 is %d, Var 1 is %d, Var 2 is %d"  \n')),(0,n.kt)("h4",{id:"escape-sequences"},"Escape Sequences:"),(0,n.kt)("p",null,"The text string can contain escape sequence that modify the behavior or apparence of the text.  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\\001\\x")," Sets the text speed for the next characters in the current text. ",(0,n.kt)("inlineCode",{parentName:"li"},"x")," is a value between ",(0,n.kt)("inlineCode",{parentName:"li"},"1")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"8")," that represents the number of frames between the render of a character using ",(0,n.kt)("inlineCode",{parentName:"li"},"2^(x-2)"),".  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\\002\\x")," Sets the text font  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\\003\\x\\y")," Sets the position for the next character  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\\004\\x\\y")," Sets the position for the next character relative to the last character  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\\005\\")," TBD  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\\006\\mask")," Wait for input to continue to the next character.  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\\007\\n")," Inverts the colors of the following characters.  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\\n")," Next line  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\\r")," Scroll text one line up  ")),(0,n.kt)("h3",{id:"vm_display_text_ex"},"VM_DISPLAY_TEXT_EX"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_DISPLAY_TEXT_EX OPTIONS, START_TILE\n")),(0,n.kt)("p",null," Renders the text in the defined layer (overlay, by default)  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"OPTIONS"),":  Text rendering options:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".DISPLAY_DEFAULT"),"      - default behavior",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".DISPLAY_PRESERVE_POS")," - preserve text position  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"START_TILE"),":  Tile number within the text rendering area to be rendered from; use .TEXT_TILE_CONTINUE to proceed from the current position  ")),(0,n.kt)("h3",{id:"vm_display_text"},"VM_DISPLAY_TEXT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_DISPLAY_TEXT\n")),(0,n.kt)("p",null," Renders the text in the defined layer (obsolete)  "),(0,n.kt)("h3",{id:"vm_switch_text_layer"},"VM_SWITCH_TEXT_LAYER"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SWITCH_TEXT_LAYER LAYER\n")),(0,n.kt)("p",null," Changes the ",(0,n.kt)("inlineCode",{parentName:"p"},"LAYER")," where the text will be rendered.  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"LAYER"),":",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".TEXT_LAYER_BKG"),"    - Render text in the background layer",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".TEXT_LAYER_WIN"),"    - Render text in the overlay layer  ")),(0,n.kt)("h3",{id:"vm_overlay_setpos"},"VM_OVERLAY_SETPOS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_SETPOS X, Y\n")),(0,n.kt)("p",null," Set position of the overlay window in tiles  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"X"),":  X-coordinate of the overlay window in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Y"),":  Y-coordinate of the overlay window in tiles  ")),(0,n.kt)("h3",{id:"vm_overlay_hide"},"VM_OVERLAY_HIDE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_HIDE\n")),(0,n.kt)("p",null," Hide the overlay window  "),(0,n.kt)("h3",{id:"vm_overlay_wait"},"VM_OVERLAY_WAIT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_WAIT IS_MODAL, WAIT_FLAGS\n")),(0,n.kt)("p",null," Wait for the UI operation(s) completion  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IS_MODAL"),":  indicates whether the operation is modal: .UI_MODAL, or not: .UI_NONMODAL  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"WAIT_FLAGS"),":  bit field, set of events to be waited for:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_WAIT_NONE"),"     - No wait",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_WAIT_WINDOW"),"   - Wait until the window moved to its final position",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_WAIT_TEXT"),"     - Wait until all the text finished rendering",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_WAIT_BTN_A"),'    - Wait until "A" is pressed',(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_WAIT_BTN_B"),'    - Wait until "B" is pressed',(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_WAIT_BTN_ANY"),"  - Wait until any button is pressed  ")),(0,n.kt)("h3",{id:"vm_overlay_move_to"},"VM_OVERLAY_MOVE_TO"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_MOVE_TO X, Y, SPEED\n")),(0,n.kt)("p",null," Animated move of the overlay window to the new position  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"X"),":  X-coordinate of the new position  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Y"),":  Y-coordinate of the new position  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SPEED"),":  speed of the movement:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".OVERLAY_IN_SPEED"),"       - default speed for appearing of the overlay",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".OVERLAY_OUT_SPEED"),"      - default speed for disappearing of the overlay",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".OVERLAY_SPEED_INSTANT"),"  - instant movement  ")),(0,n.kt)("h3",{id:"vm_overlay_show"},"VM_OVERLAY_SHOW"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_SHOW X, Y, COLOR, OPTIONS\n")),(0,n.kt)("p",null," Show the overlay window  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"X"),":  X-coordinate of the new position  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Y"),":  Y-coordinate of the new position  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"COLOR"),":  initial color of the overlay window:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_COLOR_BLACK"),"     - black overlay window",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_COLOR_WHITE"),"     - white overlay window  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"OPTIONS"),":  display options:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_DRAW_FRAME"),"      - draw overlay frame",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_AUTO_SCROLL"),"     - set automatic text scroll area; text will be scrolled up when printing more lines than the overlay height.  ")),(0,n.kt)("h3",{id:"vm_overlay_clear"},"VM_OVERLAY_CLEAR"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_CLEAR X, Y, W, H, COLOR, OPTIONS\n")),(0,n.kt)("p",null," Clear the rectangle area of the overlay window  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"X"),":  X-coordinate in tiles of the upper left corner  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Y"),":  Y-coordinate in tiles of the upper left corner  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"W"),":  Width in tiles of the rectangle area  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"H"),":  Height in tiles of the rectangle area  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"COLOR"),":  initial color of the overlay window:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_COLOR_BLACK"),"     - black overlay window",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_COLOR_WHITE"),"     - white overlay window  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"OPTIONS"),":  display options:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_DRAW_FRAME"),"      - draw overlay frame",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_AUTO_SCROLL"),"     - set automatic text scroll area; text will be scrolled up when printing more lines than the overlay height.  ")),(0,n.kt)("h3",{id:"menuitem"},".MENUITEM"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},".MENUITEM X, Y, iL, iR, iU, iD\n")),(0,n.kt)("h3",{id:"vm_choice"},"VM_CHOICE"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_CHOICE IDX, OPTIONS, COUNT\n")),(0,n.kt)("p",null," Execute menu  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"IDX"),":  Variable that receive the result of the menu execution  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"OPTIONS"),":  bit field, set of the possible menu options:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_MENU_STANDARD"),"    - default menu behavior",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_MENU_LAST_0"),"      - last item return result of 0",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_MENU_CANCEL_B"),"    - B button cancels the menu execution",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_MENU_SET_START"),"   - if set IDX may contain the initial item index  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"COUNT"),":  number of menu items  ")),(0,n.kt)("p",null,"instruction must be followed by the COUNT of .MENUITEM definitions:",(0,n.kt)("br",{parentName:"p"}),"\n",".MENUITEM X, Y, iL, iR, iU, iD",(0,n.kt)("br",{parentName:"p"}),"\n","where:",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("inlineCode",{parentName:"p"},"X")," - X-coordinate of the cursor pointer in tiles",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("inlineCode",{parentName:"p"},"Y")," - Y-coordinate of the cursor pointer in tiles",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("inlineCode",{parentName:"p"},"iL")," - menu item number where the cursor must move when you press LEFT",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("inlineCode",{parentName:"p"},"iR")," - menu item number where the cursor must move when you press RIGHT",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("inlineCode",{parentName:"p"},"iU")," - menu item number where the cursor must move when you press UP",(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("inlineCode",{parentName:"p"},"iD")," - menu item number where the cursor must move when you press DOWN  "),(0,n.kt)("h3",{id:"vm_set_font"},"VM_SET_FONT"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_FONT FONT_INDEX\n")),(0,n.kt)("p",null," Sets active font  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"FONT_INDEX"),":  the index of the font to be activated  ")),(0,n.kt)("h3",{id:"vm_set_print_dir"},"VM_SET_PRINT_DIR"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_SET_PRINT_DIR DIRECTION\n")),(0,n.kt)("p",null," Sets print direction  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DIRECTION"),":  direction of the text rendering:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_PRINT_LEFTTORIGHT"),"  - text is rendered from left to right (left justify)",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},".UI_PRINT_RIGHTTOLEFT"),"  - text is rendered from right to left (right justify)  ")),(0,n.kt)("h3",{id:"vm_overlay_set_submap_ex"},"VM_OVERLAY_SET_SUBMAP_EX"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_SET_SUBMAP_EX PARAMS_IDX\n")),(0,n.kt)("p",null," Copies rectange area of the background map onto the overlay window  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"PARAMS_IDX"),":  points to the beginning of the pseudo-structure that contains these members:",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"x"),"       - X-coordinate within the overlay window in tiles",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"y"),"       - Y-coordinate tithin the overlay window in tiles",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"w"),"       - Width of the copied area in tiles",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"h"),"       - Height of the copied area in tiles",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"scene_x")," - X-Coordinate within the background map in tiles",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("inlineCode",{parentName:"li"},"scene_y")," - Y-Coordinate within the background map in tiles  ")),(0,n.kt)("h3",{id:"vm_overlay_scroll"},"VM_OVERLAY_SCROLL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_SCROLL X, Y, W, H, COLOR\n")),(0,n.kt)("p",null," Scrolls the rectangle area  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"X"),":  X-coordinate of the upper left corner in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Y"),":  Y-coordinate of the upper left corner in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"W"),":  Width of the area in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"H"),":  Height of the area in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"COLOR"),":  Color of the empty row of tiles that appear at the bottom of the scroll area  ")),(0,n.kt)("h3",{id:"vm_overlay_set_scroll"},"VM_OVERLAY_SET_SCROLL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_SET_SCROLL X, Y, W, H, COLOR\n")),(0,n.kt)("p",null," Defines the scroll area for the overlay. When the text overflows that area it'll scroll up by 1 row  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"X"),":  X-coordinate of the upper left corner in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Y"),":  Y-coordinate of the upper left corner in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"W"),":  Width of the area in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"H"),":  Height of the area in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"COLOR"),":  Color of the empty row of tiles that appear at the bottom of the scroll area  ")),(0,n.kt)("h3",{id:"vm_overlay_set_submap"},"VM_OVERLAY_SET_SUBMAP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-gbvm"},"VM_OVERLAY_SET_SUBMAP X, Y, W, H, SX, SY\n")),(0,n.kt)("p",null," Copies a rectange area of tiles from the scene background  "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"X"),":  X-coordinate within the overlay window of the upper left corner in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Y"),":  Y-coordinate within the overlay window of the upper left corner in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"W"),":  Width of the area in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"H"),":  Height of the area in tiles  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SX"),":  X-coordinate within the level background map  "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"SY"),":  Y-coordinate within the level background map")))}u.isMDXComponent=!0}}]);